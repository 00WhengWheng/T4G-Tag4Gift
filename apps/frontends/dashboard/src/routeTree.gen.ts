/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UsersRouteImport } from './routes/users'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as MapRouteImport } from './routes/map'
import { Route as LoginRouteImport } from './routes/login'
import { Route as GiftsRouteImport } from './routes/gifts'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ChallengesRouteImport } from './routes/challenges'
import { Route as CallbackRouteImport } from './routes/callback'
import { Route as AnalyticsRouteImport } from './routes/analytics'
import { Route as IndexRouteImport } from './routes/index'

const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const MapRoute = MapRouteImport.update({
  id: '/map',
  path: '/map',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const GiftsRoute = GiftsRouteImport.update({
  id: '/gifts',
  path: '/gifts',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesRoute = ChallengesRouteImport.update({
  id: '/challenges',
  path: '/challenges',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackRoute = CallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AnalyticsRoute = AnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/callback': typeof CallbackRoute
  '/challenges': typeof ChallengesRoute
  '/dashboard': typeof DashboardRoute
  '/gifts': typeof GiftsRoute
  '/login': typeof LoginRoute
  '/map': typeof MapRoute
  '/profile': typeof ProfileRoute
  '/users': typeof UsersRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/callback': typeof CallbackRoute
  '/challenges': typeof ChallengesRoute
  '/dashboard': typeof DashboardRoute
  '/gifts': typeof GiftsRoute
  '/login': typeof LoginRoute
  '/map': typeof MapRoute
  '/profile': typeof ProfileRoute
  '/users': typeof UsersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/callback': typeof CallbackRoute
  '/challenges': typeof ChallengesRoute
  '/dashboard': typeof DashboardRoute
  '/gifts': typeof GiftsRoute
  '/login': typeof LoginRoute
  '/map': typeof MapRoute
  '/profile': typeof ProfileRoute
  '/users': typeof UsersRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/callback'
    | '/challenges'
    | '/dashboard'
    | '/gifts'
    | '/login'
    | '/map'
    | '/profile'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/callback'
    | '/challenges'
    | '/dashboard'
    | '/gifts'
    | '/login'
    | '/map'
    | '/profile'
    | '/users'
  id:
    | '__root__'
    | '/'
    | '/analytics'
    | '/callback'
    | '/challenges'
    | '/dashboard'
    | '/gifts'
    | '/login'
    | '/map'
    | '/profile'
    | '/users'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsRoute: typeof AnalyticsRoute
  CallbackRoute: typeof CallbackRoute
  ChallengesRoute: typeof ChallengesRoute
  DashboardRoute: typeof DashboardRoute
  GiftsRoute: typeof GiftsRoute
  LoginRoute: typeof LoginRoute
  MapRoute: typeof MapRoute
  ProfileRoute: typeof ProfileRoute
  UsersRoute: typeof UsersRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/map': {
      id: '/map'
      path: '/map'
      fullPath: '/map'
      preLoaderRoute: typeof MapRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gifts': {
      id: '/gifts'
      path: '/gifts'
      fullPath: '/gifts'
      preLoaderRoute: typeof GiftsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges': {
      id: '/challenges'
      path: '/challenges'
      fullPath: '/challenges'
      preLoaderRoute: typeof ChallengesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsRoute: AnalyticsRoute,
  CallbackRoute: CallbackRoute,
  ChallengesRoute: ChallengesRoute,
  DashboardRoute: DashboardRoute,
  GiftsRoute: GiftsRoute,
  LoginRoute: LoginRoute,
  MapRoute: MapRoute,
  ProfileRoute: ProfileRoute,
  UsersRoute: UsersRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
